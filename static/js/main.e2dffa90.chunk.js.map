{"version":3,"sources":["navigation/NavBar.js","home/signature/Signature.js","home/Home.js","elements/LightBox.js","elements/Card.js","elements/CardsList.js","experience/Experience.js","education/Education.js","skills/ring/Ring.js","skills/Skills.js","contactMe/form/Form.js","contactMe/socialMedia/SocialMedia.js","contactMe/Contact.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","className","activeClassName","to","arrayToImages","arr","map","path","num","key","src","alt","Signature","images","Home","top","cascade","signature","fullname","status","Lightbox","useState","toggler","slide","lightboxController","setLightboxController","tmp","extension","substring","length","onClick","number","sources","Modal","setAppElement","Card","state","modalIsOpen","openModal","bind","closeModal","this","setState","title","date","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","style","overlay","backgroundColor","details","arrayToLinks","links","image","Component","link","href","arrayToCard","exp","CardsList","array","Experience","experienceArray","Education","educationArray","Ring","skill","arrayToSet","skills","category","arrayToRings","skillTypes","types","percentage","Skills","skillsArray","Form","messageSent","alertController","setAlertControler","useForm","register","handleSubmit","errors","onSubmit","data","e","window","Email","send","SecureToken","To","email","From","Subject","Body","firstname","lastname","message","then","target","reset","type","name","placeholder","ref","required","pattern","min","value","SocialMedia","iconPath","arrayToIcons","social","network","Contact","App","basename","exact","render","myData","experience","education","from","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2dffa90.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './NavStyle.scss';\n\n\nconst NavBar = (props) => (\n\n\n  <div className=\"navbar\">\n    <ul className=\"navlist\">\n      <li> <NavLink activeClassName=\"selected\" to=\"/home\">Home</NavLink> </li>\n      <li> <NavLink activeClassName=\"selected\" to=\"/experience\">Experience</NavLink> </li>\n      <li> <NavLink activeClassName=\"selected\" to=\"/education\">Education</NavLink> </li>\n      <li> <NavLink activeClassName=\"selected\" to=\"/skills\">Skills</NavLink> </li>\n      <li> <NavLink activeClassName=\"selected\" to=\"/contact\">Contact</NavLink> </li>\n    </ul>\n  </div>\n\n\n);\n\n\n\n\nexport default NavBar;\n","import React from 'react';\nimport './SignatureStyle.scss';\n\n\nconst Signature = (props) => (\n\n  <div className=\"signatureContainer\">\n    {\n      arrayToImages( props.images )\n    }\n  </div>\n\n\n);\n\nconst arrayToImages = (arr) => ( arr.map( (path, num) => {\n    return (\n        <div key={num} className=\"imageContainer\">\n          <img className=\"image\" src={path} alt={path} />\n        </div>\n      );\n  })\n);\n\n\nexport default Signature;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Signature from './signature/Signature';\nimport './HomeStyle.scss';\n\nimport Fade from 'react-reveal/Fade';\n\n\nconst Home = (props) => (\n\n  <Fade top cascade>\n  <div className=\"home\">\n\n        <div className=\"signature\">\n          <Signature images={props.signature} />\n        </div>\n\n\n\n          <div>\n              <div className=\"fullname\">\n                <div>{props.fullname}</div>\n              </div>\n\n              <div className=\"status\">\n                <div>{props.status}</div>\n              </div>\n\n              <div className=\"hireme\">\n                <NavLink activeClassName=\"selected\" to=\"/contact\"><button className=\"button element color-11\">Hire me</button></NavLink>\n              </div>\n          </div>\n\n  </div>\n  </Fade>\n\n\n);\n\n\n\nexport default Home;\n","import React, { useState } from 'react';\nimport FsLightbox from 'fslightbox-react';\nimport './LightBox.scss';\n\n\n\nfunction Lightbox( props ) {\n// if toggler is updated when lightbox is closed it will open it\n// if toggler is updated when lightbox is opened it will close it\n  const [lightboxController, setLightboxController] = useState({\n    toggler: false,\n    slide: 1\n  });\n\n\n  const arrayToImages = (arr) => ( arr.map( (path, num) => {\n      let tmp = \"\";\n      let extension = path.substring( path.length - 4 , path.length );\n      if (  extension !== \".png\" && extension !==\".jpg\" && extension !==\".gif\" && extension !==\"jpeg\" ) {\n        tmp = <img className='images' src=\"./images/minature.png\" alt=\"./images/minature.png\" />\n      } else {\n        tmp = <img className=\"images\" src={path} alt={path} />\n      }\n      return (\n          <div key={num}>\n            <div onClick={ () => openLightboxOnSlide(num+1) }>\n              {tmp}\n            </div>\n          </div>\n        );\n    })\n  );\n\n  function openLightboxOnSlide(number) {\n    setLightboxController({\n      toggler: !lightboxController.toggler,\n      slide: number,\n    });\n  }\n\n  return (\n    <>\n        <div className=\"imagesContainer\">\n          {\n            arrayToImages( props.images )\n          }\n        </div>\n\n\n        <FsLightbox\n          toggler={ lightboxController.toggler }\n          slide={ lightboxController.slide }\n          sources={ props.images }\n\n        />\n    </>\n  );\n}\n\n\n\n\nexport default Lightbox;\n","import React, {Component} from 'react';\nimport Modal from 'react-modal';\nimport LightBox from './LightBox';\nimport './CardStyle.scss';\n\nimport Fade from 'react-reveal/Fade';\n\n\n// const customStyles = {\n//   content : {\n//     top                   : '50%',\n//     left                  : '50%',\n//     right                 : 'auto',\n//     bottom                : 'auto',\n//     marginRight           : '-50%',\n//     transform             : 'translate(-50%, -50%)'\n//   }\n// };\n\nModal.setAppElement('#main')\n\nclass Card extends Component {\n\n\n  constructor() {\n      super();\n\n      this.state = {\n        modalIsOpen: false\n      };\n\n      this.openModal = this.openModal.bind(this);\n      this.closeModal = this.closeModal.bind(this);\n    }\n\n    openModal() {\n      this.setState({modalIsOpen: true});\n    }\n\n\n    closeModal() {\n      this.setState({modalIsOpen: false});\n    }\n\n\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"card element color-11\" onClick={this.openModal}>\n\n          <div className=\"cardTitle\"> {this.props.title} </div>\n          <div className=\"cardDate\"> {this.props.date} </div>\n\n        </div>\n\n        <Modal\n         isOpen={this.state.modalIsOpen}\n         onAfterOpen={this.afterOpenModal}\n         onRequestClose={this.closeModal}\n         contentLabel=\"Modal\"\n         style={{\n              overlay: {\n                backgroundColor: 'rgba(0, 0, 0, 0.63)'\n              }\n          }}\n       >\n\n        <Fade cascade>\n        <div>\n          <div className=\"modal\">\n            <div className=\"closeContainer\" onClick={this.closeModal}>\n              <p className=\"closeTag\">&times;</p>\n            </div>\n\n\n                <div className=\"detailsContainer\">\n\n                  <div className=\"cardTitle\"> {this.props.title} </div>\n                  <div className=\"cardDate\"> {this.props.date} </div>\n                  <div className=\"cardDetails\"> {this.props.details} </div>\n                  <div className=\"cardLinks\">\n                    { arrayToLinks(this.props.links) }\n                  </div>\n                  <div className=\"cardImage\">\n                      <LightBox images={this.props.image} />\n                  </div>\n\n                </div>\n\n          </div>\n        </div>\n        </Fade>\n\n      </Modal>\n\n      </div>\n    );\n  }\n}\n\nconst arrayToLinks = (arr) => ( arr.map( (link, num) => {\n    return (\n      <div key={num}>\n        <span className=\"linkTitle\"> {link[0]} </span>\n        <span className=\"linkAdress\"> <a href={link[1]} > {link[1]} </a> </span>\n      </div>\n    );\n  })\n);\n\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport './CardsListStyle.scss';\nimport Fade from 'react-reveal/Fade';\n\nconst CardsList = (props) => (\n\n  <Fade top cascade>\n    <div className=\"cardsList\">\n        {\n          arrayToCard( props.array )\n        }\n    </div>\n  </Fade>\n\n\n);\n\n\nconst arrayToCard = (arr) => ( arr.map( (exp, num) => {\n    return (\n      <div key={num}>\n        <Card title={exp.title} date={exp.date} details={exp.details} links={exp.links} image={exp.image}/>\n      </div>\n    );\n  })\n);\n\nexport default CardsList;\n","import React from 'react';\nimport CardsList from '../elements/CardsList';\nimport './ExperienceStyle.scss';\n\nconst Experience = (props) => (\n\n  <div className=\"experience\">\n\n      <div className=\"experienceList\">\n        <CardsList array={props.experienceArray} />\n      </div>\n\n  </div>\n\n\n);\n\n\nexport default Experience;\n","import React from 'react';\nimport CardsList from '../elements/CardsList';\n\n\nconst Education = (props) => (\n\n  <div className=\"experience\">\n\n    <div className=\"experienceList\">\n      <CardsList array={props.educationArray} />\n    </div>\n\n  </div>\n\n\n);\n\n\nexport default Education;\n","import React from 'react';\nimport './RingStyle.scss';\n\n\nconst Ring = (props) => (\n\n  <div className=\"ringContainer\" >\n\n    <div className=\"outerRing\">\n      <div className=\"innerRing\"></div>\n    </div>\n    <div className=\"ringName\">{props.skill}</div>\n\n  </div>\n\n\n);\n\n\nexport default Ring;\n","import React from 'react';\nimport Ring from './ring/Ring';\nimport './SkillsStyle.scss';\n\nimport Fade from 'react-reveal/Fade';\n\n\nconst Skills = (props) => (\n\n  <div className=\"skills\" >\n\n    {\n      arrayToSet(props.skillsArray)\n    }\n\n  </div>\n\n\n);\n\nconst arrayToSet = (arr) => ( arr.map( (skills, num) => {\n    return (\n      <div key={num} className=\"skillSet\">\n        <Fade top>\n        <div className=\"category\">{skills.category}</div>\n        </Fade>\n\n        <Fade top cascade>\n        <div className=\"skillRings\">\n          {arrayToRings(skills.skillTypes)}\n        </div>\n        </Fade>\n\n      </div>\n      );\n  })\n);\n\nconst arrayToRings = (arr) => ( arr.map( (types, num) => {\n    return (\n      <div key={num} className=\"ring\">\n        <Ring skill={types.skill} percentage={types.percentage} />\n      </div>\n      );\n  })\n);\n\n\nexport default Skills;\n","\nimport React, { useState } from 'react';\nimport useForm from 'react-hook-form';\nimport './FormStyle.scss';\n\n\nexport default function Form( props ) {\n\n  const [alertController, setAlertControler] = useState({\n    messageSent : false\n  });\n\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\n\n\n  const onSubmit = (data, e) => {\n\n    window.Email.send({\n            SecureToken : \"83788b8c-03d1-41cb-88aa-4a21cd24ee2b\",\n            To : props.email,\n            From : data.email,\n            Subject : \"Personal Profil\",\n            Body : \"<h3> Firstname: \" + data.firstname + \"</h3>\"\n                  + \"<h3> Lastname: \" + data.lastname + \"<h3>\"\n                  + \"<h3> Email: \" + data.email + \"<h3><br/>\"\n                  + \"<h3> Message : <h3><br/>\" + data.message\n          }).then(\n            // message => alert( message )\n            setAlertControler( {\n              messageSent : true\n            } )\n          );\n\n          e.target.reset(); // standard reset after form submit\n  }; // callback when validation pass\n\n\n\n  return (\n\n\n    <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n\n        <div className=\"outerContainer\">\n          <div className=\"innerContainer\">\n            <div className=\"firstnameContainer\">\n              <div className=\"inputTitle\">Firstname</div>\n              <input type=\"text\" name=\"firstname\" placeholder=\"Annette\" ref={register({required: true, pattern: /^[A-Za-z]+$/i})} />\n              <div className=\"errorMessage\">{errors.firstname && 'Firstname is required (no white space)'}</div>\n            </div>\n\n            <div className=\"lastnameContainer\">\n              <div className=\"inputTitle\">Lastname</div>\n              <input type=\"text\" name=\"lastname\" placeholder=\"Cooper\" ref={register({required: true, pattern: /^[A-Za-z]+$/i})} />\n              <div className=\"errorMessage\">{errors.lastname && 'Lastname is required (no white space)'}</div>\n            </div>\n\n            <div className=\"emailContainer\">\n              <div className=\"inputTitle\">E-mail</div>\n              <input type=\"email\" name=\"email\" placeholder=\"annette.cooper@example.com\" ref={register({required: true, pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i})} />\n              <div className=\"errorMessage\">{errors.email && 'Valide e-mail is required'}</div>\n            </div>\n          </div>\n\n          <div className=\"messageContainer\">\n            <div className=\"inputTitle\">Message</div>\n            <textarea name=\"message\" ref={register({required: true, min: 150})} />\n            <div className=\"errorMessage\">{errors.message && 'Message is required'}</div>\n          </div>\n        </div>\n\n        <div className=\"submitContainer\">\n          <input className=\"button element color-11\" type=\"submit\" value={alertController.messageSent ? \"SENT\" : \"SUBMIT\"}/>\n        </div>\n\n    </form>\n\n  );\n}\n","import React from 'react';\n\nconst SocialMedia = (props) => (\n\n  <div className=\"socialContainer\" >\n\n    <div className=\"socialImage\">\n      <a href={props.link}><img src={ props.iconPath } alt={props.name}></img></a>\n    </div>\n\n  </div>\n\n\n);\n\n\nexport default SocialMedia;\n","import React from 'react';\nimport Form from './form/Form';\nimport SocialMedia from './socialMedia/SocialMedia';\nimport './ContactStyle.scss';\nimport Fade from 'react-reveal/Fade';\n\n\nconst Contact = (props) => (\n\n  <div className=\"contactContainer\" >\n    <Form email={props.email}/>\n\n    <Fade top cascade>\n    <div className=\"socialMedia\">\n        {\n          arrayToIcons( props.social )\n        }\n    </div>\n    </Fade>\n\n  </div>\n\n\n);\n\nconst arrayToIcons = (arr) => ( arr.map( (social, num) => {\n    return (\n      <div key={num}>\n        <SocialMedia name={social.network} link={social.link} iconPath={social.iconPath} />\n      </div>\n    );\n  })\n);\n\n\nexport default Contact;\n","import React from 'react';\nimport './App.css';\n\nimport myData from './data/information.json';\nimport {BrowserRouter, Route, Redirect, Switch} from 'react-router-dom';\n//\nimport NavBar from './navigation/NavBar';\nimport Home from './home/Home';\nimport Experience from './experience/Experience';\nimport Education from './education/Education';\nimport Skills from './skills/Skills';\nimport Contact from './contactMe/Contact';\n// import Footer from './footer/Footer';\n\nfunction App() {\n\n  return (\n\n    <BrowserRouter basename=\"/profil\">\n      <div className=\"App\">\n        <NavBar/>\n          <Switch>\n            <Route path=\"/home\" exact render={ () => <Home signature={myData.signature} fullname={myData.fullname} status={myData.status} />}  />\n            <Route path=\"/experience\" exact render={ () => <Experience experienceArray={myData.experience} />}  />\n            <Route path=\"/education\" exact render={ () => <Education educationArray={myData.education} />}  />\n            <Route path=\"/skills\" exact render={ () => <Skills skillsArray={myData.skills} />}  />\n            <Route path=\"/contact\" exact render={ () => <Contact email={myData.email} social={myData.social} />}  />\n            <Redirect from=\"/\" to=\"/home\" />\n          </Switch>\n        {/*<Footer/>*/}\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}